// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/login.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 登录请求
type LoginREQ struct {
	Time                 *int64   `protobuf:"varint,1,req,name=time" json:"time,omitempty"`
	Password             []byte   `protobuf:"bytes,2,req,name=password" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginREQ) Reset()         { *m = LoginREQ{} }
func (m *LoginREQ) String() string { return proto.CompactTextString(m) }
func (*LoginREQ) ProtoMessage()    {}
func (*LoginREQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26af552c9148a54, []int{0}
}

func (m *LoginREQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginREQ.Unmarshal(m, b)
}
func (m *LoginREQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginREQ.Marshal(b, m, deterministic)
}
func (m *LoginREQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginREQ.Merge(m, src)
}
func (m *LoginREQ) XXX_Size() int {
	return xxx_messageInfo_LoginREQ.Size(m)
}
func (m *LoginREQ) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginREQ.DiscardUnknown(m)
}

var xxx_messageInfo_LoginREQ proto.InternalMessageInfo

func (m *LoginREQ) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *LoginREQ) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

// 登录应答
type LoginACK struct {
	Code                 *int32   `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Sessionkey           []byte   `protobuf:"bytes,2,req,name=sessionkey" json:"sessionkey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginACK) Reset()         { *m = LoginACK{} }
func (m *LoginACK) String() string { return proto.CompactTextString(m) }
func (*LoginACK) ProtoMessage()    {}
func (*LoginACK) Descriptor() ([]byte, []int) {
	return fileDescriptor_b26af552c9148a54, []int{1}
}

func (m *LoginACK) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginACK.Unmarshal(m, b)
}
func (m *LoginACK) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginACK.Marshal(b, m, deterministic)
}
func (m *LoginACK) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginACK.Merge(m, src)
}
func (m *LoginACK) XXX_Size() int {
	return xxx_messageInfo_LoginACK.Size(m)
}
func (m *LoginACK) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginACK.DiscardUnknown(m)
}

var xxx_messageInfo_LoginACK proto.InternalMessageInfo

func (m *LoginACK) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *LoginACK) GetSessionkey() []byte {
	if m != nil {
		return m.Sessionkey
	}
	return nil
}

func init() {
	proto.RegisterType((*LoginREQ)(nil), "proto.LoginREQ")
	proto.RegisterType((*LoginACK)(nil), "proto.LoginACK")
}

func init() { proto.RegisterFile("proto/login.proto", fileDescriptor_b26af552c9148a54) }

var fileDescriptor_b26af552c9148a54 = []byte{
	// 127 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xcf, 0xc9, 0x4f, 0xcf, 0xcc, 0xd3, 0x03, 0xb3, 0x85, 0x58, 0xc1, 0x94, 0x92, 0x15,
	0x17, 0x87, 0x0f, 0x48, 0x34, 0xc8, 0x35, 0x50, 0x48, 0x88, 0x8b, 0xa5, 0x24, 0x33, 0x37, 0x55,
	0x82, 0x51, 0x81, 0x49, 0x83, 0x39, 0x08, 0xcc, 0x16, 0x92, 0xe2, 0xe2, 0x28, 0x48, 0x2c, 0x2e,
	0x2e, 0xcf, 0x2f, 0x4a, 0x91, 0x60, 0x52, 0x60, 0xd2, 0xe0, 0x09, 0x82, 0xf3, 0x95, 0xec, 0xa0,
	0x7a, 0x1d, 0x9d, 0xbd, 0x41, 0x7a, 0x93, 0xf3, 0x53, 0x20, 0x7a, 0x59, 0x83, 0xc0, 0x6c, 0x21,
	0x39, 0x2e, 0xae, 0xe2, 0xd4, 0xe2, 0xe2, 0xcc, 0xfc, 0xbc, 0xec, 0xd4, 0x4a, 0xa8, 0x6e, 0x24,
	0x11, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x58, 0x35, 0x2f, 0x29, 0x96, 0x00, 0x00, 0x00,
}
